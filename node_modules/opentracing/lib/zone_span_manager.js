"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var defaultPropertyKey = 'opentracing';
var defaultZoneName = 'opentracing';
/**
 * SpanManager using {@link Zone.js|https://github.com/angular/zone.js}.
 *
 * The activated span is tied to the Zone. I.e. Zone#run affects which span is
 * active.
 */
var ZoneSpanManager = /** @class */ (function () {
    function ZoneSpanManager(options) {
        if (options === void 0) { options = {}; }
        this._propertyKey = options.propertyKey || defaultPropertyKey;
        this._zoneName = options.zoneName || defaultZoneName;
        if (typeof Zone === 'undefined') {
            console.warn('Zone implementation does not exist.');
        }
    }
    ZoneSpanManager.prototype.active = function () {
        // tslint:disable-next-line:no-conditional-assignment
        for (var zone = Zone.current; zone = zone.getZoneWith(this._propertyKey), zone; zone = zone.parent) {
            var _a = zone.get(this._propertyKey), owner = _a.owner, span = _a.span;
            if (owner === this) {
                return span;
            }
        }
        return null;
    };
    ZoneSpanManager.prototype.activate = function (span, f) {
        var zone = Zone.current.fork({
            name: this._zoneName,
            properties: (_a = {},
                _a[this._propertyKey] = { owner: this, span: span },
                _a)
        });
        return zone.run(f);
        var _a;
    };
    return ZoneSpanManager;
}());
exports.ZoneSpanManager = ZoneSpanManager;
//# sourceMappingURL=zone_span_manager.js.map